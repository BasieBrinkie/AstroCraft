#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The descriptions in this file are accurate only for TerrainControl and OTG.
# For MCW and OTG+ these descriptions are only accurate if the BO3 is used as a CustomObject.
# MCW and OTG+ completely reimplemented CustomStructure, check the MCW/OTG+ documentation for more information.

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: Unknown

# A short description of this BO3 object
Description: This BO3 was converted from a schematic using OTGEdit. The author and description information of the schematic could not be found. If you know who the author of the schematic is then please add this information.

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable

#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: true

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 40

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: true

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestSolidBlock

# The height limits for the BO3.
MinHeight: 61

MaxHeight: 80

# Objects can have other objects attached to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All

# To optimise this BO3 for faster loading times you can use Notepad++ to find/replace comments and abbreviate things.
# Notepad++ find/replace with regex:
# Find: ^[#;].* replace to nothing removes all lines starting with # 
# Find: ^\s*$ replace to nothing removes most empty lines 
# Notepad++ find/replace without regex:
# *Warning: This will only work for OTG 1.10.2 v21 / OTG 1.11.2 v6 or higher. B( is not recognised by lower versions.
# Find: Block( replace to B(

# The style of extrusion you wish to use - BottomDown, TopUp, None (Default)
ExtrudeMode: BottomDown

# The blocks to extrude your BO3 through
ExtrudeThroughBlocks: AIR

#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

SourceBlocks: STONE:1,STONE:3,STONE:5,DIRT:1,DIRT:0,SAND:0,GRASS:0,DIRT:2,STATIONARY_WATER:0,HARD_CLAY,STAINED_CLAY:0,CLAY,SANDSTONE:0,SAND:1,AIR,STONE:0,GRAVEL,LONG_GRASS:0,LONG_GRASS:1,LONG_GRASS:2,DEAD_BUSH,YELLOW_FLOWER:0,RED_ROSE:0,BROWN_MUSHROOM,RED_MUSHROOM

MaxPercentageOutsideSourceBlock: 0

OutsideSourceBlock: placeAnyway

#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt) or B(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.

Block(-11,5,-3,LEAVES_2:0)
Block(-10,5,-8,LEAVES_2:0)
Block(-10,5,-7,LEAVES_2:0)
Block(-10,5,-3,LEAVES_2:0)
Block(-9,4,6,LEAVES_2:0)
Block(-9,5,-7,LEAVES_2:0)
Block(-9,5,-6,LEAVES_2:0)
Block(-9,5,-4,LEAVES_2:0)
Block(-9,5,-3,LEAVES_2:0)
Block(-9,5,0,LEAVES_2:0)
Block(-8,4,1,LEAVES_2:0)
Block(-8,4,2,LEAVES_2:0)
Block(-8,4,6,LEAVES_2:0)
Block(-8,5,-6,LEAVES_2:0)
Block(-8,5,-5,LEAVES_2:0)
Block(-8,5,-4,LEAVES_2:0)
Block(-8,5,-1,LEAVES_2:0)
Block(-8,5,0,LEAVES_2:0)
Block(-8,6,-7,LEAVES_2:0)
Block(-8,6,-6,LEAVES_2:0)
Block(-8,6,-4,LEAVES_2:0)
Block(-8,6,-2,LEAVES_2:0)
Block(-7,4,-5,LEAVES_2:0)
Block(-7,4,-4,LEAVES_2:0)
Block(-7,4,-3,LEAVES_2:0)
Block(-7,4,2,LEAVES_2:0)
Block(-7,4,3,LEAVES_2:0)
Block(-7,4,5,LEAVES_2:0)
Block(-7,4,6,LEAVES_2:0)
Block(-7,4,9,LEAVES_2:0)
Block(-7,5,-9,LEAVES_2:0)
Block(-7,5,-8,LEAVES_2:0)
Block(-7,5,-5,LEAVES_2:0)
Block(-7,5,-4,162:12)
Block(-7,5,-2,LEAVES_2:0)
Block(-7,5,-1,LEAVES_2:0)
Block(-7,6,-7,LEAVES_2:0)
Block(-7,6,-3,LEAVES_2:0)
Block(-7,6,-2,LEAVES_2:0)
Block(-6,4,-4,LEAVES_2:0)
Block(-6,4,-3,LEAVES_2:0)
Block(-6,4,3,LEAVES_2:0)
Block(-6,4,4,LEAVES_2:0)
Block(-6,4,5,LEAVES_2:0)
Block(-6,4,8,LEAVES_2:0)
Block(-6,4,9,LEAVES_2:0)
Block(-6,5,-8,LEAVES_2:0)
Block(-6,5,-7,LEAVES_2:0)
Block(-6,5,-6,LEAVES_2:0)
Block(-6,5,-5,LEAVES_2:0)
Block(-6,5,-4,162:12)
Block(-6,5,-3,LEAVES_2:0)
Block(-6,5,-2,LEAVES_2:0)
Block(-6,5,2,LEAVES_2:0)
Block(-6,5,3,LEAVES_2:0)
Block(-6,5,5,LEAVES_2:0)
Block(-6,5,7,LEAVES_2:0)
Block(-6,6,-7,LEAVES_2:0)
Block(-6,6,-6,LEAVES_2:0)
Block(-6,6,-5,LEAVES_2:0)
Block(-6,6,-4,LEAVES_2:0)
Block(-6,6,-1,LEAVES_2:0)
Block(-6,7,2,LEAVES_2:0)
Block(-5,3,4,LEAVES_2:0)
Block(-5,3,5,LEAVES_2:0)
Block(-5,3,6,LEAVES_2:0)
Block(-5,4,0,LEAVES_2:0)
Block(-5,4,1,LEAVES_2:0)
Block(-5,4,4,LEAVES_2:0)
Block(-5,4,7,LEAVES_2:0)
Block(-5,4,8,LEAVES_2:0)
Block(-5,5,-6,LEAVES_2:0)
Block(-5,5,-5,LEAVES_2:0)
Block(-5,5,-4,162:12)
Block(-5,5,-3,162:12)
Block(-5,5,-2,LEAVES_2:0)
Block(-5,5,-1,LEAVES_2:0)
Block(-5,5,0,LEAVES_2:0)
Block(-5,5,2,LEAVES_2:0)
Block(-5,5,6,LEAVES_2:0)
Block(-5,5,7,LEAVES_2:0)
Block(-5,6,-5,LEAVES_2:0)
Block(-5,6,-4,LEAVES_2:0)
Block(-5,6,-3,LEAVES_2:0)
Block(-5,6,-2,LEAVES_2:0)
Block(-5,7,-3,LEAVES_2:0)
Block(-5,7,-2,LEAVES_2:0)
Block(-5,7,2,LEAVES_2:0)
Block(-4,3,5,LEAVES_2:0)
Block(-4,3,6,LEAVES_2:0)
Block(-4,4,-3,162:12)
Block(-4,4,-2,162:12)
Block(-4,4,1,LEAVES_2:0)
Block(-4,4,2,LEAVES_2:0)
Block(-4,4,3,162:12)
Block(-4,4,4,162:12)
Block(-4,4,5,162:12)
Block(-4,4,6,LEAVES_2:0)
Block(-4,4,7,LEAVES_2:0)
Block(-4,5,-7,LEAVES_2:0)
Block(-4,5,-6,LEAVES_2:0)
Block(-4,5,-3,162:12)
Block(-4,5,0,LEAVES_2:0)
Block(-4,5,1,LEAVES_2:0)
Block(-4,5,2,LEAVES_2:0)
Block(-4,5,3,LEAVES_2:0)
Block(-4,5,4,LEAVES_2:0)
Block(-4,5,5,LEAVES_2:0)
Block(-4,5,8,LEAVES_2:0)
Block(-4,6,-6,LEAVES_2:0)
Block(-4,6,-5,LEAVES_2:0)
Block(-4,6,-2,LEAVES_2:0)
Block(-4,6,-1,LEAVES_2:0)
Block(-4,7,-2,LEAVES_2:0)
Block(-4,7,-1,LEAVES_2:0)
Block(-4,7,1,LEAVES_2:0)
Block(-4,7,2,LEAVES_2:0)
Block(-4,7,5,LEAVES_2:0)
Block(-3,0,1,162:12)
Block(-3,1,1,162:12)
Block(-3,2,-2,162:12)
Block(-3,2,1,162:12)
Block(-3,2,2,162:12)
Block(-3,3,-2,162:12)
Block(-3,3,2,162:12)
Block(-3,3,3,162:12)
Block(-3,4,-2,162:12)
Block(-3,4,3,162:12)
Block(-3,4,4,LEAVES_2:0)
Block(-3,4,6,LEAVES_2:0)
Block(-3,4,7,LEAVES_2:0)
Block(-3,4,8,LEAVES_2:0)
Block(-3,4,9,LEAVES_2:0)
Block(-3,5,-8,LEAVES_2:0)
Block(-3,5,-7,LEAVES_2:0)
Block(-3,5,-4,LEAVES_2:0)
Block(-3,5,-2,LEAVES_2:0)
Block(-3,5,4,LEAVES_2:0)
Block(-3,5,5,LEAVES_2:0)
Block(-3,5,6,LEAVES_2:0)
Block(-3,5,7,LEAVES_2:0)
Block(-3,6,-10,LEAVES_2:0)
Block(-3,6,-9,LEAVES_2:0)
Block(-3,6,-7,LEAVES_2:0)
Block(-3,6,-6,LEAVES_2:0)
Block(-3,6,-5,LEAVES_2:0)
Block(-3,6,-4,LEAVES_2:0)
Block(-3,6,-3,LEAVES_2:0)
Block(-3,7,-1,LEAVES_2:0)
Block(-3,7,0,LEAVES_2:0)
Block(-3,7,1,LEAVES_2:0)
Block(-3,7,4,LEAVES_2:0)
Block(-3,7,5,LEAVES_2:0)
Block(-3,8,-2,LEAVES_2:0)
Block(-3,8,-1,LEAVES_2:0)
Block(-3,8,1,LEAVES_2:0)
Block(-3,8,3,LEAVES_2:0)
Block(-2,0,-2,162:12)
Block(-2,1,-2,162:12)
Block(-2,2,-2,162:12)
Block(-2,3,6,LEAVES_2:0)
Block(-2,4,2,LEAVES_2:0)
Block(-2,4,3,LEAVES_2:0)
Block(-2,4,6,LEAVES_2:0)
Block(-2,4,9,LEAVES_2:0)
Block(-2,4,10,LEAVES_2:0)
Block(-2,5,-8,LEAVES_2:0)
Block(-2,5,-5,LEAVES_2:0)
Block(-2,5,-4,LEAVES_2:0)
Block(-2,5,-2,LEAVES_2:0)
Block(-2,5,-1,LEAVES_2:0)
Block(-2,5,3,LEAVES_2:0)
Block(-2,5,7,LEAVES_2:0)
Block(-2,5,8,LEAVES_2:0)
Block(-2,6,-9,LEAVES_2:0)
Block(-2,6,-8,LEAVES_2:0)
Block(-2,6,-6,LEAVES_2:0)
Block(-2,6,-5,LEAVES_2:0)
Block(-2,6,-2,LEAVES_2:0)
Block(-2,6,0,LEAVES_2:0)
Block(-2,6,1,LEAVES_2:0)
Block(-2,6,2,LEAVES_2:0)
Block(-2,7,-4,LEAVES_2:0)
Block(-2,7,-3,LEAVES_2:0)
Block(-2,7,0,LEAVES_2:0)
Block(-2,7,3,LEAVES_2:0)
Block(-2,7,4,LEAVES_2:0)
Block(-2,8,-2,LEAVES_2:0)
Block(-2,8,2,LEAVES_2:0)
Block(-2,8,3,LEAVES_2:0)
Block(-1,2,0,162:12)
Block(-1,3,0,162:12)
Block(-1,4,0,162:12)
Block(-1,4,1,LEAVES_2:0)
Block(-1,4,2,LEAVES_2:0)
Block(-1,4,5,LEAVES_2:0)
Block(-1,4,7,LEAVES_2:0)
Block(-1,5,-5,LEAVES_2:0)
Block(-1,5,-3,LEAVES_2:0)
Block(-1,5,-1,LEAVES_2:0)
Block(-1,5,0,162:12)
Block(-1,5,1,162:12)
Block(-1,5,2,LEAVES_2:0)
Block(-1,5,3,LEAVES_2:0)
Block(-1,5,5,LEAVES_2:0)
Block(-1,5,6,LEAVES_2:0)
Block(-1,6,-8,LEAVES_2:0)
Block(-1,6,-7,LEAVES_2:0)
Block(-1,6,-6,LEAVES_2:0)
Block(-1,6,-3,LEAVES_2:0)
Block(-1,6,-2,LEAVES_2:0)
Block(-1,6,1,162:12)
Block(-1,6,2,LEAVES_2:0)
Block(-1,7,-9,LEAVES_2:0)
Block(-1,7,-8,LEAVES_2:0)
Block(-1,7,-6,LEAVES_2:0)
Block(-1,7,-4,LEAVES_2:0)
Block(-1,7,-3,LEAVES_2:0)
Block(-1,7,-2,LEAVES_2:0)
Block(-1,7,-1,LEAVES_2:0)
Block(-1,7,0,LEAVES_2:0)
Block(-1,7,1,162:12)
Block(-1,7,2,LEAVES_2:0)
Block(-1,7,3,LEAVES_2:0)
Block(-1,8,-2,LEAVES_2:0)
Block(-1,8,-1,LEAVES_2:0)
Block(-1,8,0,LEAVES_2:0)
Block(-1,8,1,LEAVES_2:0)
Block(-1,8,4,LEAVES_2:0)
Block(0,0,-2,162:12)
Block(0,0,0,162:12)
Block(0,1,-2,162:12)
Block(0,1,0,162:12)
Block(0,2,-2,162:12)
Block(0,2,0,162:12)
Block(0,3,-3,162:12)
Block(0,3,-2,162:12)
Block(0,4,-4,162:12)
Block(0,4,-3,162:12)
Block(0,4,1,LEAVES_2:0)
Block(0,4,4,LEAVES_2:0)
Block(0,4,5,LEAVES_2:0)
Block(0,4,7,LEAVES_2:0)
Block(0,4,8,LEAVES_2:0)
Block(0,5,-7,LEAVES_2:0)
Block(0,5,-6,LEAVES_2:0)
Block(0,5,-5,LEAVES_2:0)
Block(0,5,-4,162:12)
Block(0,6,-11,LEAVES_2:0)
Block(0,6,-10,LEAVES_2:0)
Block(0,6,-7,LEAVES_2:0)
Block(0,6,-4,LEAVES_2:0)
Block(0,6,-3,LEAVES_2:0)
Block(0,7,-9,LEAVES_2:0)
Block(0,7,-5,LEAVES_2:0)
Block(0,7,-4,LEAVES_2:0)
Block(0,7,-1,LEAVES_2:0)
Block(0,7,0,LEAVES_2:0)
Block(0,7,2,LEAVES_2:0)
Block(0,7,3,LEAVES_2:0)
Block(0,7,4,LEAVES_2:0)
Block(0,7,5,LEAVES_2:0)
Block(0,8,0,LEAVES_2:0)
Block(0,8,1,LEAVES_2:0)
Block(0,8,2,LEAVES_2:0)
Block(0,8,3,LEAVES_2:0)
Block(1,4,4,LEAVES_2:0)
Block(1,4,6,LEAVES_2:0)
Block(1,4,8,LEAVES_2:0)
Block(1,5,-6,LEAVES_2:0)
Block(1,5,-5,162:12)
Block(1,5,-4,162:12)
Block(1,6,-10,LEAVES_2:0)
Block(1,6,-9,LEAVES_2:0)
Block(1,6,-8,LEAVES_2:0)
Block(1,6,-7,LEAVES_2:0)
Block(1,6,-6,162:12)
Block(1,6,-5,162:12)
Block(1,6,-4,LEAVES_2:0)
Block(1,6,2,LEAVES_2:0)
Block(1,7,-9,LEAVES_2:0)
Block(1,7,-8,LEAVES_2:0)
Block(1,7,-7,LEAVES_2:0)
Block(1,7,-6,LEAVES_2:0)
Block(1,7,-3,LEAVES_2:0)
Block(1,7,-2,LEAVES_2:0)
Block(1,7,-1,LEAVES_2:0)
Block(1,7,2,LEAVES_2:0)
Block(1,7,5,LEAVES_2:0)
Block(1,7,6,LEAVES_2:0)
Block(1,8,-1,LEAVES_2:0)
Block(1,8,3,LEAVES_2:0)
Block(1,8,4,LEAVES_2:0)
Block(2,0,0,162:12)
Block(2,1,0,162:12)
Block(2,2,0,162:12)
Block(2,3,0,162:12)
Block(2,4,2,LEAVES_2:0)
Block(2,6,-8,LEAVES_2:0)
Block(2,6,-7,LEAVES_2:0)
Block(2,6,-5,LEAVES_2:0)
Block(2,6,-4,LEAVES_2:0)
Block(2,6,-3,LEAVES_2:0)
Block(2,6,-2,LEAVES_2:0)
Block(2,7,-7,LEAVES_2:0)
Block(2,7,-6,LEAVES_2:0)
Block(2,7,-5,LEAVES_2:0)
Block(2,7,-4,LEAVES_2:0)
Block(2,7,-3,LEAVES_2:0)
Block(2,7,-2,LEAVES_2:0)
Block(2,7,1,LEAVES_2:0)
Block(2,7,3,LEAVES_2:0)
Block(2,8,-2,LEAVES_2:0)
Block(2,8,-1,LEAVES_2:0)
Block(2,8,1,LEAVES_2:0)
Block(2,8,2,LEAVES_2:0)
Block(3,3,0,162:12)
Block(3,4,-3,LEAVES_2:0)
Block(3,4,-2,LEAVES_2:0)
Block(3,4,0,162:12)
Block(3,4,2,LEAVES_2:0)
Block(3,5,-5,LEAVES_2:0)
Block(3,6,-9,LEAVES_2:0)
Block(3,6,-8,LEAVES_2:0)
Block(3,6,-5,LEAVES_2:0)
Block(3,6,-2,LEAVES_2:0)
Block(3,6,-1,LEAVES_2:0)
Block(3,7,-8,LEAVES_2:0)
Block(3,7,-4,LEAVES_2:0)
Block(3,7,-3,LEAVES_2:0)
Block(3,7,0,LEAVES_2:0)
Block(3,7,1,LEAVES_2:0)
Block(3,7,3,LEAVES_2:0)
Block(3,7,4,LEAVES_2:0)
Block(4,4,-2,LEAVES_2:0)
Block(4,4,-1,LEAVES_2:0)
Block(4,4,0,162:12)
Block(4,4,1,162:12)
Block(4,4,2,LEAVES_2:0)
Block(4,4,5,LEAVES_2:0)
Block(4,6,-10,LEAVES_2:0)
Block(4,6,-9,LEAVES_2:0)
Block(4,6,-6,LEAVES_2:0)
Block(4,6,-4,LEAVES_2:0)
Block(4,7,-9,LEAVES_2:0)
Block(4,7,-8,LEAVES_2:0)
Block(4,7,-6,LEAVES_2:0)
Block(4,7,-5,LEAVES_2:0)
Block(4,7,0,LEAVES_2:0)
Block(4,7,2,LEAVES_2:0)
Block(4,7,4,LEAVES_2:0)
Block(5,4,-1,LEAVES_2:0)
Block(5,4,0,LEAVES_2:0)
Block(5,4,1,162:12)
Block(5,4,4,LEAVES_2:0)
Block(5,4,5,LEAVES_2:0)
Block(5,5,-2,LEAVES_2:0)
Block(5,5,-1,LEAVES_2:0)
Block(5,5,1,LEAVES_2:0)
Block(5,5,3,LEAVES_2:0)
Block(5,6,-10,LEAVES_2:0)
Block(5,6,-7,LEAVES_2:0)
Block(5,6,-6,LEAVES_2:0)
Block(5,6,-4,LEAVES_2:0)
Block(5,6,-3,LEAVES_2:0)
Block(6,3,0,LEAVES_2:0)
Block(6,3,1,LEAVES_2:0)
Block(6,3,2,LEAVES_2:0)
Block(6,4,-4,LEAVES_2:0)
Block(6,4,-3,LEAVES_2:0)
Block(6,4,0,LEAVES_2:0)
Block(6,4,1,162:12)
Block(6,4,3,LEAVES_2:0)
Block(6,4,4,LEAVES_2:0)
Block(6,5,-2,LEAVES_2:0)
Block(6,5,2,LEAVES_2:0)
Block(6,5,3,LEAVES_2:0)
Block(6,6,-7,LEAVES_2:0)
Block(6,6,-5,LEAVES_2:0)
Block(6,6,-3,LEAVES_2:0)
Block(7,3,1,LEAVES_2:0)
Block(7,3,2,LEAVES_2:0)
Block(7,4,-3,LEAVES_2:0)
Block(7,4,-2,LEAVES_2:0)
Block(7,4,-1,LEAVES_2:0)
Block(7,4,0,LEAVES_2:0)
Block(7,4,1,162:12)
Block(7,4,2,LEAVES_2:0)
Block(7,4,3,LEAVES_2:0)
Block(7,5,-2,LEAVES_2:0)
Block(7,5,-1,LEAVES_2:0)
Block(7,5,0,LEAVES_2:0)
Block(7,5,1,LEAVES_2:0)
Block(7,5,4,LEAVES_2:0)
Block(8,4,-1,LEAVES_2:0)
Block(8,4,0,LEAVES_2:0)
Block(8,4,2,LEAVES_2:0)
Block(8,4,3,LEAVES_2:0)
Block(8,4,4,LEAVES_2:0)
Block(8,4,5,LEAVES_2:0)
Block(8,5,0,LEAVES_2:0)
Block(8,5,1,LEAVES_2:0)
Block(8,5,2,LEAVES_2:0)
Block(8,5,3,LEAVES_2:0)
Block(9,3,2,LEAVES_2:0)
Block(9,4,-2,LEAVES_2:0)
Block(9,4,-1,LEAVES_2:0)
Block(9,4,2,LEAVES_2:0)
Block(9,4,5,LEAVES_2:0)
Block(9,4,6,LEAVES_2:0)
Block(9,5,-1,LEAVES_2:0)
Block(9,5,3,LEAVES_2:0)
Block(9,5,4,LEAVES_2:0)
Block(10,4,-3,LEAVES_2:0)
Block(10,4,-2,LEAVES_2:0)
Block(10,4,1,LEAVES_2:0)
Block(10,4,3,LEAVES_2:0)
Block(10,5,-2,LEAVES_2:0)
Block(10,5,-1,LEAVES_2:0)
Block(10,5,1,LEAVES_2:0)
Block(10,5,2,LEAVES_2:0)
Block(11,4,-3,LEAVES_2:0)
Block(11,4,0,LEAVES_2:0)
Block(11,4,1,LEAVES_2:0)
Block(11,4,3,LEAVES_2:0)
Block(11,4,4,LEAVES_2:0)
Block(12,4,0,LEAVES_2:0)
Block(12,4,2,LEAVES_2:0)
Block(12,4,4,LEAVES_2:0)


#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Entities                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Entity() spawns an entity instead of a block. The entity is spawned only once when the BO3 is spawned.
# Entities are persistent by default so they don't de-spawn when no player is near, they are only unloaded.
# Usage: Entity(x,y,z,mobName,groupSize,NameTagOrNBTFileName) or Entity(x,y,z,mobName,groupSize)
# Use /tc entities or /otg entities to get a list of entities that can be used as mobName, this includes entities added by other mods.
# NameTagOrNBTFileName can be either a nametag for the mob or an nbt file (such as mymobinfo.nbt or mymobinfo.txt).
# When using a text file you can use the same mob spawning parameters used with the /summon command to equip the
# entity and give it custom attributes etc. You can copy the DATA part of a summon command including surrounding
# curly braces to a .txt file, for instance for: "/summon Skeleton x y z {DATA}"

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:
#   BlockCheck(0,-1,0,GRASS,DIRT)  Require grass or dirt just below the object
#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,-1,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,LEAVES_2:0)          Require almost complete darkness just below the object

BlockCheck(2,-1,0,GRASS,DIRT,SAND,HARD_CLAY)
BlockCheck(0,-1,0,GRASS,DIRT,SAND,HARD_CLAY)
BlockCheck(0,-1,-2,GRASS,DIRT,SAND,HARD_CLAY)
BlockCheck(-3,-1,1,GRASS,DIRT,SAND,HARD_CLAY)
BlockCheck(-2,-1,-2,GRASS,DIRT,SAND,HARD_CLAY)