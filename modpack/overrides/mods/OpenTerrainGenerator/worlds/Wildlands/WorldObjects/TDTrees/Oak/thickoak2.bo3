#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: 

# A short description of this BO3 object
Description: 

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: true

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 100

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 100

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: True

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestSolidBlock

# The height limits for the BO3.
MinHeight: 62

MaxHeight: 100

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you writer.write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: All


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block(s) the BO3 should spawn in.
SourceBlocks:STONE:1,STONE:3,STONE:5,DIRT:1,DIRT,SAND,GRASS,DIRT:2,STATIONARY_WATER,HARD_CLAY,STAINED_CLAY,CLAY,SANDSTONE,SAND:1,AIR,STONE,GRAVEL,LONG_GRASS,LONG_GRASS:1,LONG_GRASS:2,DEAD_BUSH,YELLOW_FLOWER,RED_ROSE,BROWN_MUSHROOM,RED_MUSHROOM

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 0

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: dontPlace


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
Block(0,0,-3,LOG:12)
Block(1,0,-3,LOG:12)
Block(0,0,-2,LOG:12)
Block(1,0,-2,LOG:12)
Block(0,1,-3,LOG:12)
Block(1,1,-3,LOG:12)
Block(0,1,-2,LOG:12)
Block(1,1,-2,LOG:12)
Block(0,2,-3,LOG:12)
Block(1,2,-3,LOG:12)
Block(0,2,-2,LOG:12)
Block(1,2,-2,LOG:12)
Block(0,3,-3,LOG:12)
Block(1,3,-3,LOG:12)
Block(0,3,-2,LOG:12)
Block(1,3,-2,LOG:12)
Block(0,4,-3,LOG:12)
Block(1,4,-3,LOG:12)
Block(0,4,-2,LOG:12)
Block(1,4,-2,LOG:12)
Block(0,5,-3,LOG:12)
Block(1,5,-3,LOG:12)
Block(0,5,-2,LOG:12)
Block(1,5,-2,LOG:12)
Block(0,6,-3,LOG:12)
Block(1,6,-3,LOG:12)
Block(0,6,-2,LOG:12)
Block(1,6,-2,LOG:12)
Block(0,7,-3,LOG:12)
Block(1,7,-3,LOG:12)
Block(0,7,-2,LOG:12)
Block(1,7,-2,LOG:12)
Block(0,8,-3,LOG:12)
Block(1,8,-3,LOG:12)
Block(0,8,-2,LOG:12)
Block(1,8,-2,LOG:12)
Block(0,9,-3,LOG:12)
Block(1,9,-3,LOG:12)
Block(0,9,-2,LOG:12)
Block(1,9,-2,LOG:12)
Block(0,10,-3,LOG:12)
Block(1,10,-3,LOG:12)
Block(0,10,-2,LOG:12)
Block(1,10,-2,LOG:12)
Block(0,11,-4,LOG:12)
Block(0,11,-3,LOG:12)
Block(1,11,-3,LOG:12)
Block(2,11,-3,LOG:12)
Block(0,11,-2,LOG:12)
Block(1,11,-2,LOG:12)
Block(0,12,-5,LOG:12)
Block(0,12,-3,LOG:12)
Block(1,12,-3,LOG:12)
Block(3,12,-3,LOG:12)
Block(0,12,-2,LOG:12)
Block(1,12,-2,LOG:12)
Block(1,12,-1,LOG:12)
Block(1,13,-8,LEAVES:0)
Block(-1,13,-7,LEAVES:0)
Block(0,13,-7,LEAVES:0)
Block(-1,13,-6,LEAVES:0)
Block(0,13,-6,LOG:12)
Block(1,13,-6,LEAVES:0)
Block(0,13,-3,LOG:12)
Block(1,13,-3,LOG:12)
Block(4,13,-3,LOG:12)
Block(0,13,-2,LOG:12)
Block(1,13,-2,LOG:12)
Block(1,13,0,LOG:12)
Block(-1,14,-8,LEAVES:0)
Block(0,14,-8,LEAVES:0)
Block(1,14,-8,LEAVES:0)
Block(2,14,-8,LEAVES:0)
Block(-1,14,-7,LEAVES:0)
Block(0,14,-7,LOG:12)
Block(1,14,-7,LEAVES:0)
Block(2,14,-7,LEAVES:0)
Block(-1,14,-6,LEAVES:0)
Block(0,14,-6,LEAVES:0)
Block(1,14,-6,LEAVES:0)
Block(2,14,-6,LEAVES:0)
Block(-1,14,-5,LEAVES:0)
Block(5,14,-4,LEAVES:0)
Block(6,14,-4,LEAVES:0)
Block(0,14,-3,LOG:12)
Block(1,14,-3,LOG:12)
Block(5,14,-3,LOG:12)
Block(6,14,-3,LEAVES:0)
Block(7,14,-3,LEAVES:0)
Block(-1,14,-2,LOG:12)
Block(0,14,-2,LOG:12)
Block(1,14,-2,LOG:12)
Block(6,14,-2,LEAVES:0)
Block(7,14,-2,LEAVES:0)
Block(1,14,1,LOG:12)
Block(-1,15,-8,LEAVES:0)
Block(0,15,-8,LEAVES:0)
Block(1,15,-8,LEAVES:0)
Block(-1,15,-7,LEAVES:0)
Block(0,15,-7,LEAVES:0)
Block(0,15,-6,LEAVES:0)
Block(1,15,-6,LEAVES:0)
Block(7,15,-5,LEAVES:0)
Block(0,15,-4,LOG:12)
Block(5,15,-4,LEAVES:0)
Block(6,15,-4,LEAVES:0)
Block(7,15,-4,LEAVES:0)
Block(8,15,-4,LEAVES:0)
Block(0,15,-3,LOG:12)
Block(1,15,-3,LOG:12)
Block(5,15,-3,LEAVES:0)
Block(6,15,-3,LOG:12)
Block(7,15,-3,LEAVES:0)
Block(-2,15,-2,LOG:12)
Block(0,15,-2,LOG:12)
Block(1,15,-2,LOG:12)
Block(2,15,-2,LOG:12)
Block(5,15,-2,LEAVES:0)
Block(6,15,-2,LEAVES:0)
Block(7,15,-2,LEAVES:0)
Block(8,15,-2,LEAVES:0)
Block(6,15,-1,LEAVES:0)
Block(7,15,-1,LEAVES:0)
Block(0,15,2,LEAVES:0)
Block(1,15,2,LOG:12)
Block(1,15,3,LEAVES:0)
Block(1,15,4,LEAVES:0)
Block(0,16,-5,LOG:12)
Block(5,16,-4,LEAVES:0)
Block(6,16,-4,LEAVES:0)
Block(-5,16,-3,LEAVES:0)
Block(-4,16,-3,LEAVES:0)
Block(-3,16,-3,LEAVES:0)
Block(0,16,-3,LOG:12)
Block(1,16,-3,LOG:12)
Block(5,16,-3,LEAVES:0)
Block(6,16,-3,LEAVES:0)
Block(7,16,-3,LEAVES:0)
Block(-5,16,-2,LEAVES:0)
Block(-4,16,-2,LEAVES:0)
Block(-3,16,-2,LOG:12)
Block(0,16,-2,LOG:12)
Block(1,16,-2,LOG:12)
Block(3,16,-2,LOG:12)
Block(7,16,-2,LEAVES:0)
Block(-4,16,-1,LEAVES:0)
Block(0,16,1,LEAVES:0)
Block(2,16,1,LEAVES:0)
Block(-1,16,2,LEAVES:0)
Block(0,16,2,LEAVES:0)
Block(1,16,2,LEAVES:0)
Block(2,16,2,LEAVES:0)
Block(3,16,2,LEAVES:0)
Block(-1,16,3,LEAVES:0)
Block(0,16,3,LEAVES:0)
Block(1,16,3,LOG:12)
Block(2,16,3,LEAVES:0)
Block(3,16,3,LEAVES:0)
Block(0,16,4,LEAVES:0)
Block(1,16,4,LEAVES:0)
Block(2,16,4,LEAVES:0)
Block(3,16,4,LEAVES:0)
Block(1,16,5,LEAVES:0)
Block(1,17,-8,LEAVES:0)
Block(0,17,-7,LEAVES:0)
Block(1,17,-7,LEAVES:0)
Block(-1,17,-6,LEAVES:0)
Block(0,17,-6,LOG:12)
Block(1,17,-6,LEAVES:0)
Block(-5,17,-3,LEAVES:0)
Block(-4,17,-3,LEAVES:0)
Block(-3,17,-3,LEAVES:0)
Block(0,17,-3,LOG:12)
Block(1,17,-3,LOG:12)
Block(-6,17,-2,LEAVES:0)
Block(-5,17,-2,LEAVES:0)
Block(-4,17,-2,LOG:12)
Block(-3,17,-2,LEAVES:0)
Block(-2,17,-2,LEAVES:0)
Block(-1,17,-2,LOG:12)
Block(0,17,-2,LOG:12)
Block(1,17,-2,LOG:12)
Block(4,17,-2,LOG:12)
Block(-5,17,-1,LEAVES:0)
Block(-4,17,-1,LEAVES:0)
Block(-3,17,-1,LEAVES:0)
Block(1,17,-1,LOG:12)
Block(-5,17,0,LEAVES:0)
Block(0,17,2,LEAVES:0)
Block(0,17,3,LEAVES:0)
Block(1,17,3,LEAVES:0)
Block(0,17,4,LEAVES:0)
Block(1,17,4,LEAVES:0)
Block(2,17,4,LEAVES:0)
Block(-2,18,-8,LEAVES:0)
Block(-1,18,-8,LEAVES:0)
Block(0,18,-8,LEAVES:0)
Block(1,18,-8,LEAVES:0)
Block(2,18,-8,LEAVES:0)
Block(-2,18,-7,LEAVES:0)
Block(-1,18,-7,LEAVES:0)
Block(0,18,-7,LOG:12)
Block(1,18,-7,LEAVES:0)
Block(-1,18,-6,LEAVES:0)
Block(0,18,-6,LEAVES:0)
Block(1,18,-6,LEAVES:0)
Block(2,18,-6,LEAVES:0)
Block(0,18,-5,LEAVES:0)
Block(1,18,-5,LEAVES:0)
Block(-5,18,-3,LEAVES:0)
Block(-3,18,-3,LEAVES:0)
Block(0,18,-3,LOG:12)
Block(1,18,-3,LOG:12)
Block(5,18,-3,LEAVES:0)
Block(-5,18,-2,LEAVES:0)
Block(-4,18,-2,LEAVES:0)
Block(-2,18,-2,LOG:12)
Block(0,18,-2,LOG:12)
Block(1,18,-2,LOG:12)
Block(5,18,-2,LOG:12)
Block(6,18,-2,LEAVES:0)
Block(-5,18,-1,LEAVES:0)
Block(-4,18,-1,LEAVES:0)
Block(-3,18,-1,LEAVES:0)
Block(5,18,-1,LEAVES:0)
Block(6,18,-1,LEAVES:0)
Block(1,18,0,LOG:12)
Block(0,19,-8,LEAVES:0)
Block(0,19,-7,LEAVES:0)
Block(-1,19,-6,LEAVES:0)
Block(1,19,-6,LEAVES:0)
Block(-1,19,-5,LEAVES:0)
Block(0,19,-5,LEAVES:0)
Block(1,19,-5,LEAVES:0)
Block(2,19,-5,LEAVES:0)
Block(-2,19,-4,LEAVES:0)
Block(-1,19,-4,LEAVES:0)
Block(0,19,-4,LEAVES:0)
Block(1,19,-4,LEAVES:0)
Block(2,19,-4,LEAVES:0)
Block(3,19,-4,LEAVES:0)
Block(4,19,-4,LEAVES:0)
Block(6,19,-4,LEAVES:0)
Block(-1,19,-3,LEAVES:0)
Block(0,19,-3,LOG:12)
Block(1,19,-3,LOG:12)
Block(2,19,-3,LEAVES:0)
Block(3,19,-3,LEAVES:0)
Block(4,19,-3,LEAVES:0)
Block(5,19,-3,LEAVES:0)
Block(6,19,-3,LEAVES:0)
Block(7,19,-3,LEAVES:0)
Block(-3,19,-2,LOG:12)
Block(-2,19,-2,LEAVES:0)
Block(-1,19,-2,LEAVES:0)
Block(0,19,-2,LOG:12)
Block(1,19,-2,LOG:12)
Block(2,19,-2,LEAVES:0)
Block(3,19,-2,LEAVES:0)
Block(4,19,-2,LEAVES:0)
Block(5,19,-2,LEAVES:0)
Block(6,19,-2,LOG:12)
Block(7,19,-2,LEAVES:0)
Block(8,19,-2,LEAVES:0)
Block(-1,19,-1,LEAVES:0)
Block(0,19,-1,LEAVES:0)
Block(1,19,-1,LEAVES:0)
Block(2,19,-1,LEAVES:0)
Block(5,19,-1,LEAVES:0)
Block(6,19,-1,LEAVES:0)
Block(7,19,-1,LEAVES:0)
Block(0,19,0,LEAVES:0)
Block(1,19,0,LEAVES:0)
Block(2,19,0,LEAVES:0)
Block(5,19,0,LEAVES:0)
Block(6,19,0,LEAVES:0)
Block(1,19,1,LOG:12)
Block(0,19,2,LEAVES:0)
Block(1,19,2,LEAVES:0)
Block(2,19,3,LEAVES:0)
Block(-1,20,-5,LEAVES:0)
Block(0,20,-5,LEAVES:0)
Block(-1,20,-4,LEAVES:0)
Block(0,20,-4,LEAVES:0)
Block(1,20,-4,LEAVES:0)
Block(-5,20,-3,LEAVES:0)
Block(-2,20,-3,LEAVES:0)
Block(-1,20,-3,LEAVES:0)
Block(0,20,-3,LOG:12)
Block(1,20,-3,LOG:12)
Block(2,20,-3,LEAVES:0)
Block(3,20,-3,LEAVES:0)
Block(5,20,-3,LEAVES:0)
Block(-5,20,-2,LEAVES:0)
Block(-4,20,-2,LOG:12)
Block(-2,20,-2,LEAVES:0)
Block(-1,20,-2,LEAVES:0)
Block(0,20,-2,LOG:12)
Block(1,20,-2,LOG:12)
Block(2,20,-2,LEAVES:0)
Block(5,20,-2,LEAVES:0)
Block(6,20,-2,LEAVES:0)
Block(7,20,-2,LEAVES:0)
Block(-5,20,-1,LEAVES:0)
Block(-2,20,-1,LEAVES:0)
Block(-1,20,-1,LEAVES:0)
Block(0,20,-1,LEAVES:0)
Block(1,20,-1,LEAVES:0)
Block(2,20,-1,LEAVES:0)
Block(3,20,-1,LEAVES:0)
Block(6,20,-1,LEAVES:0)
Block(7,20,-1,LEAVES:0)
Block(-1,20,0,LEAVES:0)
Block(0,20,0,LEAVES:0)
Block(1,20,0,LEAVES:0)
Block(2,20,0,LEAVES:0)
Block(-1,20,1,LEAVES:0)
Block(0,20,1,LEAVES:0)
Block(1,20,1,LEAVES:0)
Block(2,20,1,LEAVES:0)
Block(0,20,2,LEAVES:0)
Block(1,20,2,LOG:12)
Block(2,20,2,LEAVES:0)
Block(0,20,3,LEAVES:0)
Block(1,20,3,LEAVES:0)
Block(2,20,3,LEAVES:0)
Block(3,20,3,LEAVES:0)
Block(0,20,4,LEAVES:0)
Block(1,20,4,LEAVES:0)
Block(2,20,4,LEAVES:0)
Block(-1,21,-5,LEAVES:0)
Block(-5,21,-4,LEAVES:0)
Block(-2,21,-4,LEAVES:0)
Block(-1,21,-4,LEAVES:0)
Block(0,21,-4,LEAVES:0)
Block(1,21,-4,LEAVES:0)
Block(-7,21,-3,LEAVES:0)
Block(-6,21,-3,LEAVES:0)
Block(-5,21,-3,LEAVES:0)
Block(-4,21,-3,LEAVES:0)
Block(-3,21,-3,LEAVES:0)
Block(-2,21,-3,LEAVES:0)
Block(-1,21,-3,LEAVES:0)
Block(0,21,-3,LOG:12)
Block(1,21,-3,LOG:12)
Block(2,21,-3,LEAVES:0)
Block(-7,21,-2,LEAVES:0)
Block(-6,21,-2,LEAVES:0)
Block(-5,21,-2,LOG:12)
Block(-4,21,-2,LEAVES:0)
Block(-3,21,-2,LEAVES:0)
Block(-2,21,-2,LEAVES:0)
Block(-1,21,-2,LEAVES:0)
Block(0,21,-2,LOG:12)
Block(1,21,-2,LOG:12)
Block(2,21,-2,LEAVES:0)
Block(3,21,-2,LEAVES:0)
Block(-7,21,-1,LEAVES:0)
Block(-6,21,-1,LEAVES:0)
Block(-5,21,-1,LEAVES:0)
Block(-4,21,-1,LEAVES:0)
Block(-3,21,-1,LEAVES:0)
Block(-2,21,-1,LEAVES:0)
Block(-1,21,-1,LEAVES:0)
Block(0,21,-1,LEAVES:0)
Block(1,21,-1,LEAVES:0)
Block(2,21,-1,LEAVES:0)
Block(3,21,-1,LEAVES:0)
Block(-6,21,0,LEAVES:0)
Block(-2,21,0,LEAVES:0)
Block(-1,21,0,LEAVES:0)
Block(0,21,0,LEAVES:0)
Block(1,21,0,LEAVES:0)
Block(0,21,1,LEAVES:0)
Block(1,21,2,LEAVES:0)
Block(0,21,3,LEAVES:0)
Block(-1,22,-6,LEAVES:0)
Block(0,22,-6,LEAVES:0)
Block(1,22,-6,LEAVES:0)
Block(-1,22,-5,LEAVES:0)
Block(0,22,-5,LEAVES:0)
Block(1,22,-5,LEAVES:0)
Block(2,22,-5,LEAVES:0)
Block(3,22,-5,LEAVES:0)
Block(-2,22,-4,LEAVES:0)
Block(-1,22,-4,LEAVES:0)
Block(0,22,-4,LEAVES:0)
Block(1,22,-4,LEAVES:0)
Block(2,22,-4,LEAVES:0)
Block(3,22,-4,LEAVES:0)
Block(-2,22,-3,LEAVES:0)
Block(-1,22,-3,LEAVES:0)
Block(0,22,-3,LEAVES:0)
Block(1,22,-3,LEAVES:0)
Block(2,22,-3,LEAVES:0)
Block(3,22,-3,LEAVES:0)
Block(-6,22,-2,LEAVES:0)
Block(-5,22,-2,LEAVES:0)
Block(-1,22,-2,LEAVES:0)
Block(0,22,-2,LEAVES:0)
Block(1,22,-2,LEAVES:0)
Block(2,22,-2,LEAVES:0)
Block(3,22,-2,LEAVES:0)
Block(4,22,-2,LEAVES:0)
Block(-2,22,-1,LEAVES:0)
Block(0,22,-1,LEAVES:0)
Block(1,22,-1,LEAVES:0)
Block(2,22,-1,LEAVES:0)
Block(4,22,-1,LEAVES:0)
Block(3,22,0,LEAVES:0)
Block(0,23,-4,LEAVES:0)
Block(1,23,-4,LEAVES:0)
Block(2,23,-4,LEAVES:0)
Block(-1,23,-3,LEAVES:0)
Block(0,23,-3,LEAVES:0)
Block(1,23,-3,LEAVES:0)
Block(2,23,-3,LEAVES:0)
Block(0,23,-2,LEAVES:0)
Block(1,23,-2,LEAVES:0)
Block(2,23,-2,LEAVES:0)
Block(3,23,-2,LEAVES:0)
Block(1,23,-1,LEAVES:0)
Block(2,23,-1,LEAVES:0)
Block(0,24,-3,LEAVES:0)
Block(1,24,-3,LEAVES:0)
Block(-2,24,-2,LEAVES:0)
Block(-1,24,-2,LEAVES:0)
Block(0,24,-2,LEAVES:0)
Block(1,24,-2,LEAVES:0)
Block(-1,24,-1,LEAVES:0)
Block(0,24,-1,LEAVES:0)
Block(0,25,-3,LEAVES:0)
Block(0,25,-2,LEAVES:0)
Block(1,25,-2,LEAVES:0)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,BlockName[,BlockName[,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,BlockName[,BlockName[,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)

# You can use "Solid" as a BlockName for matching all solid blocks or "All" to match all blocks that aren't air.

# Examples:

#   BlockCheck(0,-1,0,Solid)       Require any solid block just below the object
#   BlockCheck(0,-1,0,WOOL)        Require any type of wool just below the object
#   BlockCheck(0,-1,0,WOOL:0)      Require white wool just below the object
#   BlockCheckNot(0,-1,0,WOOL:0)   Require that there is no white wool below the object
#   LightCheck(0,0,0,0,1)          Require almost complete darkness just below the object

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
BlockCheck(0,-1,0,STONE,GRASS,DIRT)
